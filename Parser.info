-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Inicio                              (0)
	Inicio -> Expr                                     (1)
	Inicio -> ExprL                                    (2)
	Inicio -> Var                                      (3)
	Var -> Var Tipo IdVar ';'                          (4)
	Var -> Tipo IdVar ';'                              (5)
	Tipo -> 'int'                                      (6)
	Tipo -> 'float'                                    (7)
	Tipo -> 'string'                                   (8)
	ExprL -> ExprL '||' TermL                          (9)
	ExprL -> ExprL '&&' TermL                          (10)
	ExprL -> TermL                                     (11)
	TermL -> '!' TermL                                 (12)
	TermL -> ExprR                                     (13)
	ExprR -> Expr '==' Expr                            (14)
	ExprR -> Expr '/=' Expr                            (15)
	ExprR -> Expr '<=' Expr                            (16)
	ExprR -> Expr '<' Expr                             (17)
	ExprR -> Expr '>=' Expr                            (18)
	ExprR -> Expr '>' Expr                             (19)
	Expr -> Expr '+' Term                              (20)
	Expr -> Expr '-' Term                              (21)
	Expr -> Term                                       (22)
	Term -> Term '*' Factor                            (23)
	Term -> Term '/' Factor                            (24)
	Term -> Factor                                     (25)
	Factor -> TConst                                   (26)
	Factor -> '(' Expr ')'                             (27)
	Factor -> '-' Factor                               (28)
	Factor -> IdVar                                    (29)
	IdVar -> Id                                        (30)
	TConst -> NumInt                                   (31)
	TConst -> NumDouble                                (32)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'+'            { ADD }
	'-'            { SUB }
	'*'            { MUL }
	'/'            { DIV }
	'('            { LPAR }
	')'            { RPAR }
	'=='           { REQ }
	'/='           { RNE }
	'<='           { RLE }
	'<'            { RLT }
	'>='           { RGE }
	'>'            { RGT }
	'||'           { OR }
	'&&'           { AND }
	'!'            { NOT }
	'int'          { DECINT }
	'float'        { DECFLOAT }
	'string'       { DECSTRING }
	';'            { FIMLINHA }
	NumDouble      { NUMDOUBLE $$ }
	NumInt         { NUMINT $$ }
	Id             { ID $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Inicio          rules 1, 2, 3
	Var             rules 4, 5
	Tipo            rules 6, 7, 8
	ExprL           rules 9, 10, 11
	TermL           rules 12, 13
	ExprR           rules 14, 15, 16, 17, 18, 19
	Expr            rules 20, 21, 22
	Term            rules 23, 24, 25
	Factor          rules 26, 27, 28, 29
	IdVar           rule  30
	TConst          rules 31, 32

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_calc -> . Inicio                             (rule 0)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 19
	'int'          shift, and enter state 20
	'float'        shift, and enter state 21
	'string'       shift, and enter state 22
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Inicio         goto state 12
	Var            goto state 13
	Tipo           goto state 14
	ExprL          goto state 15
	TermL          goto state 16
	ExprR          goto state 17
	Expr           goto state 18
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 1

	Inicio -> . Expr                                    (rule 1)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 2
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 2

	Inicio -> Expr .                                    (rule 1)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26


State 3

	Expr -> Term .                                      (rule 22)
	Term -> Term . '*' Factor                           (rule 23)
	Term -> Term . '/' Factor                           (rule 24)

	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 39
	'/'            shift, and enter state 40
	')'            reduce using rule 22
	'=='           reduce using rule 22
	'/='           reduce using rule 22
	'<='           reduce using rule 22
	'<'            reduce using rule 22
	'>='           reduce using rule 22
	'>'            reduce using rule 22
	'||'           reduce using rule 22
	'&&'           reduce using rule 22
	%eof           reduce using rule 22


State 4

	Term -> Factor .                                    (rule 25)

	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	')'            reduce using rule 25
	'=='           reduce using rule 25
	'/='           reduce using rule 25
	'<='           reduce using rule 25
	'<'            reduce using rule 25
	'>='           reduce using rule 25
	'>'            reduce using rule 25
	'||'           reduce using rule 25
	'&&'           reduce using rule 25
	%eof           reduce using rule 25


State 5

	Factor -> IdVar .                                   (rule 29)

	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	')'            reduce using rule 29
	'=='           reduce using rule 29
	'/='           reduce using rule 29
	'<='           reduce using rule 29
	'<'            reduce using rule 29
	'>='           reduce using rule 29
	'>'            reduce using rule 29
	'||'           reduce using rule 29
	'&&'           reduce using rule 29
	%eof           reduce using rule 29


State 6

	Factor -> TConst .                                  (rule 26)

	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	')'            reduce using rule 26
	'=='           reduce using rule 26
	'/='           reduce using rule 26
	'<='           reduce using rule 26
	'<'            reduce using rule 26
	'>='           reduce using rule 26
	'>'            reduce using rule 26
	'||'           reduce using rule 26
	'&&'           reduce using rule 26
	%eof           reduce using rule 26


State 7

	Factor -> '-' . Factor                              (rule 28)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Factor         goto state 38
	IdVar          goto state 5
	TConst         goto state 6

State 8

	Factor -> '(' . Expr ')'                            (rule 27)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 37
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 9

	TConst -> NumDouble .                               (rule 32)

	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	')'            reduce using rule 32
	'=='           reduce using rule 32
	'/='           reduce using rule 32
	'<='           reduce using rule 32
	'<'            reduce using rule 32
	'>='           reduce using rule 32
	'>'            reduce using rule 32
	'||'           reduce using rule 32
	'&&'           reduce using rule 32
	%eof           reduce using rule 32


State 10

	TConst -> NumInt .                                  (rule 31)

	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	')'            reduce using rule 31
	'=='           reduce using rule 31
	'/='           reduce using rule 31
	'<='           reduce using rule 31
	'<'            reduce using rule 31
	'>='           reduce using rule 31
	'>'            reduce using rule 31
	'||'           reduce using rule 31
	'&&'           reduce using rule 31
	%eof           reduce using rule 31


State 11

	IdVar -> Id .                                       (rule 30)

	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	')'            reduce using rule 30
	'=='           reduce using rule 30
	'/='           reduce using rule 30
	'<='           reduce using rule 30
	'<'            reduce using rule 30
	'>='           reduce using rule 30
	'>'            reduce using rule 30
	'||'           reduce using rule 30
	'&&'           reduce using rule 30
	';'            reduce using rule 30
	%eof           reduce using rule 30


State 12

	%start_calc -> Inicio .                             (rule 0)

	%eof           accept


State 13

	Inicio -> Var .                                     (rule 3)
	Var -> Var . Tipo IdVar ';'                         (rule 4)

	'int'          shift, and enter state 20
	'float'        shift, and enter state 21
	'string'       shift, and enter state 22
	%eof           reduce using rule 3

	Tipo           goto state 36

State 14

	Var -> Tipo . IdVar ';'                             (rule 5)

	Id             shift, and enter state 11

	IdVar          goto state 35

State 15

	Inicio -> ExprL .                                   (rule 2)
	ExprL -> ExprL . '||' TermL                         (rule 9)
	ExprL -> ExprL . '&&' TermL                         (rule 10)

	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	%eof           reduce using rule 2


State 16

	ExprL -> TermL .                                    (rule 11)

	'||'           reduce using rule 11
	'&&'           reduce using rule 11
	%eof           reduce using rule 11


State 17

	TermL -> ExprR .                                    (rule 13)

	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	%eof           reduce using rule 13


State 18

	Inicio -> Expr .                                    (rule 1)
	ExprR -> Expr . '==' Expr                           (rule 14)
	ExprR -> Expr . '/=' Expr                           (rule 15)
	ExprR -> Expr . '<=' Expr                           (rule 16)
	ExprR -> Expr . '<' Expr                            (rule 17)
	ExprR -> Expr . '>=' Expr                           (rule 18)
	ExprR -> Expr . '>' Expr                            (rule 19)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'=='           shift, and enter state 27
	'/='           shift, and enter state 28
	'<='           shift, and enter state 29
	'<'            shift, and enter state 30
	'>='           shift, and enter state 31
	'>'            shift, and enter state 32
	%eof           reduce using rule 1


State 19

	TermL -> '!' . TermL                                (rule 12)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 19
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	TermL          goto state 23
	ExprR          goto state 17
	Expr           goto state 24
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 20

	Tipo -> 'int' .                                     (rule 6)

	Id             reduce using rule 6


State 21

	Tipo -> 'float' .                                   (rule 7)

	Id             reduce using rule 7


State 22

	Tipo -> 'string' .                                  (rule 8)

	Id             reduce using rule 8


State 23

	TermL -> '!' TermL .                                (rule 12)

	'||'           reduce using rule 12
	'&&'           reduce using rule 12
	%eof           reduce using rule 12


State 24

	ExprR -> Expr . '==' Expr                           (rule 14)
	ExprR -> Expr . '/=' Expr                           (rule 15)
	ExprR -> Expr . '<=' Expr                           (rule 16)
	ExprR -> Expr . '<' Expr                            (rule 17)
	ExprR -> Expr . '>=' Expr                           (rule 18)
	ExprR -> Expr . '>' Expr                            (rule 19)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'=='           shift, and enter state 27
	'/='           shift, and enter state 28
	'<='           shift, and enter state 29
	'<'            shift, and enter state 30
	'>='           shift, and enter state 31
	'>'            shift, and enter state 32


State 25

	Expr -> Expr '+' . Term                             (rule 20)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Term           goto state 55
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 26

	Expr -> Expr '-' . Term                             (rule 21)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Term           goto state 54
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 27

	ExprR -> Expr '==' . Expr                           (rule 14)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 53
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 28

	ExprR -> Expr '/=' . Expr                           (rule 15)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 52
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 29

	ExprR -> Expr '<=' . Expr                           (rule 16)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 51
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 30

	ExprR -> Expr '<' . Expr                            (rule 17)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 50
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 31

	ExprR -> Expr '>=' . Expr                           (rule 18)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 49
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 32

	ExprR -> Expr '>' . Expr                            (rule 19)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Expr           goto state 48
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 33

	ExprL -> ExprL '||' . TermL                         (rule 9)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 19
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	TermL          goto state 47
	ExprR          goto state 17
	Expr           goto state 24
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 34

	ExprL -> ExprL '&&' . TermL                         (rule 10)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 19
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	TermL          goto state 46
	ExprR          goto state 17
	Expr           goto state 24
	Term           goto state 3
	Factor         goto state 4
	IdVar          goto state 5
	TConst         goto state 6

State 35

	Var -> Tipo IdVar . ';'                             (rule 5)

	';'            shift, and enter state 45


State 36

	Var -> Var Tipo . IdVar ';'                         (rule 4)

	Id             shift, and enter state 11

	IdVar          goto state 44

State 37

	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)
	Factor -> '(' Expr . ')'                            (rule 27)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	')'            shift, and enter state 43


State 38

	Factor -> '-' Factor .                              (rule 28)

	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	')'            reduce using rule 28
	'=='           reduce using rule 28
	'/='           reduce using rule 28
	'<='           reduce using rule 28
	'<'            reduce using rule 28
	'>='           reduce using rule 28
	'>'            reduce using rule 28
	'||'           reduce using rule 28
	'&&'           reduce using rule 28
	%eof           reduce using rule 28


State 39

	Term -> Term '*' . Factor                           (rule 23)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Factor         goto state 42
	IdVar          goto state 5
	TConst         goto state 6

State 40

	Term -> Term '/' . Factor                           (rule 24)

	'-'            shift, and enter state 7
	'('            shift, and enter state 8
	NumDouble      shift, and enter state 9
	NumInt         shift, and enter state 10
	Id             shift, and enter state 11

	Factor         goto state 41
	IdVar          goto state 5
	TConst         goto state 6

State 41

	Term -> Term '/' Factor .                           (rule 24)

	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	')'            reduce using rule 24
	'=='           reduce using rule 24
	'/='           reduce using rule 24
	'<='           reduce using rule 24
	'<'            reduce using rule 24
	'>='           reduce using rule 24
	'>'            reduce using rule 24
	'||'           reduce using rule 24
	'&&'           reduce using rule 24
	%eof           reduce using rule 24


State 42

	Term -> Term '*' Factor .                           (rule 23)

	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	')'            reduce using rule 23
	'=='           reduce using rule 23
	'/='           reduce using rule 23
	'<='           reduce using rule 23
	'<'            reduce using rule 23
	'>='           reduce using rule 23
	'>'            reduce using rule 23
	'||'           reduce using rule 23
	'&&'           reduce using rule 23
	%eof           reduce using rule 23


State 43

	Factor -> '(' Expr ')' .                            (rule 27)

	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	')'            reduce using rule 27
	'=='           reduce using rule 27
	'/='           reduce using rule 27
	'<='           reduce using rule 27
	'<'            reduce using rule 27
	'>='           reduce using rule 27
	'>'            reduce using rule 27
	'||'           reduce using rule 27
	'&&'           reduce using rule 27
	%eof           reduce using rule 27


State 44

	Var -> Var Tipo IdVar . ';'                         (rule 4)

	';'            shift, and enter state 56


State 45

	Var -> Tipo IdVar ';' .                             (rule 5)

	'int'          reduce using rule 5
	'float'        reduce using rule 5
	'string'       reduce using rule 5
	%eof           reduce using rule 5


State 46

	ExprL -> ExprL '&&' TermL .                         (rule 10)

	'||'           reduce using rule 10
	'&&'           reduce using rule 10
	%eof           reduce using rule 10


State 47

	ExprL -> ExprL '||' TermL .                         (rule 9)

	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	%eof           reduce using rule 9


State 48

	ExprR -> Expr '>' Expr .                            (rule 19)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 19
	'&&'           reduce using rule 19
	%eof           reduce using rule 19


State 49

	ExprR -> Expr '>=' Expr .                           (rule 18)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 18
	'&&'           reduce using rule 18
	%eof           reduce using rule 18


State 50

	ExprR -> Expr '<' Expr .                            (rule 17)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 17
	'&&'           reduce using rule 17
	%eof           reduce using rule 17


State 51

	ExprR -> Expr '<=' Expr .                           (rule 16)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	%eof           reduce using rule 16


State 52

	ExprR -> Expr '/=' Expr .                           (rule 15)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 15
	'&&'           reduce using rule 15
	%eof           reduce using rule 15


State 53

	ExprR -> Expr '==' Expr .                           (rule 14)
	Expr -> Expr . '+' Term                             (rule 20)
	Expr -> Expr . '-' Term                             (rule 21)

	'+'            shift, and enter state 25
	'-'            shift, and enter state 26
	'||'           reduce using rule 14
	'&&'           reduce using rule 14
	%eof           reduce using rule 14


State 54

	Expr -> Expr '-' Term .                             (rule 21)
	Term -> Term . '*' Factor                           (rule 23)
	Term -> Term . '/' Factor                           (rule 24)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            shift, and enter state 39
	'/'            shift, and enter state 40
	')'            reduce using rule 21
	'=='           reduce using rule 21
	'/='           reduce using rule 21
	'<='           reduce using rule 21
	'<'            reduce using rule 21
	'>='           reduce using rule 21
	'>'            reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	%eof           reduce using rule 21


State 55

	Expr -> Expr '+' Term .                             (rule 20)
	Term -> Term . '*' Factor                           (rule 23)
	Term -> Term . '/' Factor                           (rule 24)

	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            shift, and enter state 39
	'/'            shift, and enter state 40
	')'            reduce using rule 20
	'=='           reduce using rule 20
	'/='           reduce using rule 20
	'<='           reduce using rule 20
	'<'            reduce using rule 20
	'>='           reduce using rule 20
	'>'            reduce using rule 20
	'||'           reduce using rule 20
	'&&'           reduce using rule 20
	%eof           reduce using rule 20


State 56

	Var -> Var Tipo IdVar ';' .                         (rule 4)

	'int'          reduce using rule 4
	'float'        reduce using rule 4
	'string'       reduce using rule 4
	%eof           reduce using rule 4


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 33
Number of terminals: 22
Number of non-terminals: 12
Number of states: 57
